c
n
file.each do |p|
file.path
file
c
row
n
CSV.foreach(file.path, {:encoding => 'utf-8', headers: true, skip_blanks: true}) do |row|
c
status
n
status
c
status
row.headers
row.headers.blank?
c
row.headers.reverse === header_arr
c
row.headers.reverse === header_arr
row.headers
c
row.headers
row.headers.reverse === header_arr
c
row.headers!=["title", "photo"]
c
~c
c
row.headers
c
n
CSV.open(file, skip_blanks: true).reject { |row| row.all?(&:nil?) }
CSV.open(import_file, skip_blanks: true).reject { |row| row.all?(&:nil?) }
row.headers==["title","photo"]
row.headers
c
row.headers.includes? ["title", "photo"]
row.headers.equals?["title", "photo"]
row.headers
row.header
row
row.headers.equals?["title", "photo"]
row.headers == ["title", "photo"]
row.headers == ["title"]
row.headers == []
row.headers.none?{|p| p p}
row.headers
row.headers.include?["image"]
row.headers
row.headers.none?{|e| e =~ /image/i}
row.headers.none?{|e| e =~ /email/i}
file.headers
file
row["title"]
row["photo"]
row["image"]
row["image"}
row
file.path
row
c
$redis.get("error_count")
$redis.get("success_count")
n
$redis.get("success_count")
$redis.get("error_count")
c
n
$redis.get("error_count")
$redis.get("success_count")
n
$redis.get("success_count")
n
$redis.get("success_count")
n
c
n
$redis.get("success_count")
n
$redis.get("success_count")
$redis.get("success_count)
c
$redis.get("success_count")
$redis.get("error_count")
n
$redis.get("success_count")
c
n
object_arr
c
n
